<div class="my-2">
  <h1 class="flex items-baseline justify-between gap-1.5 py-2 text-center text-slate-700 transition-all">
    <span class="orb-head"><%=title%></span>
    <p class="orb-label text-right"><span class="pr-0.5 text-red-500">*</span>필수입력사항</p>
  </h1>
</div>

<form id="formEmployeeModify">
  <div class="bg-default-bg space-y-4 rounded-xl p-4 text-sm text-gray-800 shadow-[0_2px_30px_rgba(0,0,0,.06)] lg:p-6">
    <div>
      <label for="email" class="orb-label mb-2 block">이메일<span class="pl-0.5 text-red-500">*</span></label>
      <p class="orb-input"><%=data.email%></p>
    </div>

    <div>
      <label for="name" class="orb-label mb-2 block">이름<span class="pl-0.5 text-red-500">*</span></label>
      <input
        type="text"
        id="name"
        name="name"
        class="orb-input"
        value="<%=data.name%>"
        placeholder="이름을 입력해주세요."
        required
      />
    </div>

    <div>
      <label for="phone" class="orb-label mb-2 block">전화번호</label>
      <input
        type="text"
        id="phone"
        name="phone"
        class="orb-input"
        value="<%=data.phone%>"
        placeholder="전화번호를 입력해주세요."
      />
    </div>

    <div>
      <label for="mobile" class="orb-label mb-2 block">휴대전화</label>
      <input
        type="text"
        id="mobile"
        name="mobile"
        class="orb-input"
        value="<%=data.mobile%>"
        placeholder="휴대전화 번호를 입력해주세요."
      />
    </div>

    <div>
      <label for="address" class="orb-label mb-2 block">주소</label>
      <input
        type="text"
        id="address"
        name="address"
        class="orb-input"
        value="<%=data.address%>"
        placeholder="주소를 입력해주세요."
      />
    </div>

    <div>
      <label for="birthDate" class="orb-label mb-2 block">생년월일</label>
      <input type="date" id="birthDate" name="birthDate" class="orb-input" value="<%=data.birthDate%>" />
    </div>

    <div>
      <label for="position" class="orb-label mb-2 block">직급</label>
      <input
        type="text"
        id="position"
        name="position"
        class="orb-input"
        value="<%=data.position%>"
        placeholder="직급을 입력해주세요."
      />
    </div>

    <div>
      <label for="description" class="orb-label mb-2 block">설명</label>
      <input
        type="text"
        id="description"
        name="description"
        class="orb-input"
        value="<%=data.description%>"
        placeholder="설명을 입력해주세요."
      />
    </div>

    <div class="flex gap-3 lg:gap-4">
      <div class="flex-1">
        <label for="hireDate" class="orb-label mb-2 block">입사일</label>
        <input type="date" id="hireDate" name="hireDate" class="orb-input" value="<%=data.hireDate%>" />
      </div>

      <div class="flex-1">
        <label for="hireDate" class="orb-label mb-2 block">퇴사일</label>
        <input type="date" id="fireDate" name="fireDate" class="orb-input" value="<%=data.fireDate%>" />
      </div>
    </div>

    <button type="submit" class="orb-btn orb-btn-success ml-auto">수정</button>
  </div>
</form>

<script nonce="<%=nonce%>">
  document.addEventListener('DOMContentLoaded', () => {
    document.getElementById('formEmployeeModify').addEventListener('submit', async (e) => {
      e.preventDefault();

      isLoading(true);

      // 폼 데이터 수집
      const formData = new FormData(e.target);

      // 폼 데이터 변환
      const data = {};
      formData.forEach((value, key) => {
        data[key] = value;
      });

      try {
        // 직원 수정 API 호출
        const response = await fetchApi(
          '<%=apiRoutes.employees.update.method%>',
          '<%=apiRoutes.employees.update.url%>'.replace(':employeeId', '<%=data.id%>'),
          {
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(data),
          }
        );

        // 응답 성공
        alertMessage(
          'success',
          '<%=apiRoutes.employees.update.title%>되었습니다.',
          '<%=apiRoutes.employees.update.title%>'
        ).then(() => {
          window.location.href = '<%=backendRoutes.employees.detail.url%>'.replace(':employeeId', '<%=data.id%>');
        });
      } catch (error) {
        toastMessage('error', error.message || '서버 오류가 발생했습니다.');
      } finally {
        isLoading(false);
      }
    });
  });
</script>
