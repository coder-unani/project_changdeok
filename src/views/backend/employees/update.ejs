<div class="block pt-2 mb-2">
  <h1 class='flex justify-self-start items-center gap-1.5 py-2 text-center text-slate-700 transition-all'>
    <span class="font-bold text-xl"><%=title%></span>
  </h1>
</div>
<form id="formEmployeeModify" class="space-y-4 text-sm">
  <div class="space-y-4 text-sm bg-white p-2 mb-4 lg:p-4 rounded-xl shadow-[0_2px_30px_rgba(0,0,0,.06)]">
    <div>
      <label for="email" class="block mb-1 font-medium text-gray-700">이메일</label>
      <p class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"><%=data.employee.email%></p>
    </div>
    
    <div>
      <label for="name" class="block mb-1 font-medium text-gray-700">이름</label>
      <input type="text" id="name" name="name" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" value="<%=data.employee.name%>" placeholder="이름" required>
    </div>
    
    <div>
      <label for="position" class="block mb-1 font-medium text-gray-700">직급</label>
      <input type="text" id="position" name="position" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" value="<%=data.employee.position%>" placeholder="직급">
    </div>
    
    <div>
      <label for="description" class="block mb-1 font-medium text-gray-700">설명</label>
      <input type="text" id="description" name="description" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" value="<%=data.employee.description%>" placeholder="설명">
    </div>
    
    <div>
      <label for="phone" class="block mb-1 font-medium text-gray-700">전화번호</label>
      <input type="text" id="phone" name="phone" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" value="<%=data.employee.phone%>" placeholder="전화번호">
    </div>
    
    <div>
      <label for="mobile" class="block mb-1 font-medium text-gray-700">휴대전화</label>
      <input type="text" id="mobile" name="mobile" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" value="<%=data.employee.mobile%>" placeholder="휴대전화">
    </div>
    
    <div>
      <label for="address" class="block mb-1 font-medium text-gray-700">주소</label>
      <input type="text" id="address" name="address" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" value="<%=data.employee.address%>" placeholder="주소">
    </div>
    
    <div>
      <label for="birthDate" class="block mb-1 font-medium text-gray-700">생년월일</label>
      <input type="date" id="birthDate" name="birthDate" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" value="<%=data.employee.birthDate%>">
    </div>

    <div>
      <label for="hireDate" class="block mb-1 font-medium text-gray-700">입사일</label>
      <input type="date" id="hireDate" name="hireDate" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" value="<%=data.employee.hireDate%>">
    </div>
    
    <div>
      <label for="hireDate" class="block mb-1 font-medium text-gray-700">퇴사일</label>
      <input type="date" id="fireDate" name="fireDate" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" value="<%=data.employee.fireDate%>">
    </div>
  </div>

  <div class="text-right">
    <button type="submit" class="orb-btn-primary">
      수정
    </button>
  </div>
</form>

<script>
  document.getElementById('formEmployeeModify').addEventListener('submit', async function(event) {
      event.preventDefault();

      // 폼 데이터 수집
      const formData = new FormData(this);

      // 폼 데이터 변환
      const data = {};
      formData.forEach((value, key) => {
          data[key] = value;
      });

      try {
        // 직원 수정 API 호출
        const apiUrl = '<%=apiBackendRoutes.employeesUpdate.url%>'.replace(':employeeId', '<%=data.employee.id%>');
        const response = await fetch(apiUrl, {
          method: '<%=apiBackendRoutes.employeesUpdate.method%>',
          headers: {
              'Content-Type': 'application/json'
          },
          body: JSON.stringify(data)
        });

        // 응답 오류
        if (!response.ok) {
          const errorData = await response.json();
          throw new Error(errorData.message || response.statusText);
        }
        
        // 응답 성공
        alert('<%=apiBackendRoutes.employeesUpdate.title%> 성공');
          
      } catch (err) {
        alert(error.message || '서버 오류가 발생했습니다.');
          
      }
  });
</script>

