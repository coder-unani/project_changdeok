<div class="block pt-2 mb-2">
  <h1 class='flex justify-self-start items-center gap-1.5 py-2 text-center text-slate-700 transition-all'>
    <span class="text-2xl font-semibold"><%=title%></span>
  </h1>
</div>
<form id="formEmployeePermissions">
  <div class="space-y-4 text-sm bg-white p-4 mb-4 lg:p-6 rounded-xl shadow-[0_2px_30px_rgba(0,0,0,.06)]">
    <table class="table-auto min-w-full">
      <thead>
        <tr>
          <% metadata.permissions.forEach((permission, index) => { %>
            <th class="hidden lg:table-cell text-center w-32 min-w-32 px-4 py-3 bg-gray-100 border-t border-b border-gray-200">
              <p class="text-xs lg:text-[13px] font-normal leading-none text-gray-500"><%=permission.title%></p>
            </th>
          <% }); %>
        </tr>
        </thead>
        <tbody>
          <tr class="border-b border-gray-200">
          <% metadata.permissions.forEach((permission, index) => { %>
            <td class="px-4 py-3 text-center">
              <input 
                type="checkbox" 
                id="permission<%=index%>" 
                name="permission" 
                class="text-blue-500 border border-gray-300 focus:outline-none cursor-pointer" 
                value="<%=permission.id%>" 
                <%= data.permissions.includes(permission.id) ? 'checked' : '' %>
              >
            </td>
          <% }); %>
          </tr>
        </tbody>
    </table>
    </div>
    <div class="text-right">
      <button type="submit" class="orb-btn-primary">
        저장
      </button>
    </div>
  </form>

<script nonce="<%=nonce%>">
  document.getElementById('formEmployeePermissions').addEventListener('submit', async function(e) {
    e.preventDefault();

    const permissions = Array.from(document.querySelectorAll('input[name="permission"]:checked')).map(checkbox => checkbox.value);

    const data = { permissions };

    try {
      // 권한 부여 API 호출
      const apiUrl = '<%=apiRoutes.employees.permissions.url%>'.replace(':employeeId', '<%=data.id%>');
      const response = await fetch(apiUrl, {
        method: '<%=apiRoutes.employees.permissions.method%>',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
      });

      // 응답 오류
      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.message || response.statusText);
      }
      
      // 응답 성공
      alert('<%=apiRoutes.employees.permissions.title%> 성공');
      
    } catch (err) {
      alert(error.message || '서버 오류가 발생했습니다.');
        
    }
  });
</script>