<div class="my-2">
  <h1 class='flex justify-self-start items-center gap-1.5 py-2 text-center text-slate-700 transition-all'>
    <span class="orb-head"><%=title%></span>
  </h1>
</div>
<form id="formEmployeePermissions">
  <div class="space-y-4 text-sm bg-default-bg p-4 lg:p-6 rounded-xl shadow-[0_2px_30px_rgba(0,0,0,.06)]">
    <div class="w-full overflow-x-auto">
      <table class="table-auto min-w-full">
        <thead>
          <tr>
            <% metadata.permissions.forEach((permission, index) => { %>
              <th class="table-cell text-center w-32 min-w-32 px-4 py-3 bg-gray-100 border-t border-b border-main-border">
                <p class="text-xs lg:text-[13px] font-normal leading-none text-gray-500"><%=permission.title%></p>
              </th>
            <% }); %>
          </tr>
          </thead>
          <tbody>
            <tr class="border-b border-main-border">
            <% metadata.permissions.forEach((permission, index) => { %>
              <td class="px-4 py-3 text-center">
                <input 
                  type="checkbox" 
                  id="permission<%=index%>" 
                  name="permission" 
                  class="text-blue-500 border border-gray-300 focus:outline-none cursor-pointer" 
                  value="<%=permission.id%>" 
                  <%= data.permissions.includes(permission.id) ? 'checked' : '' %>
                >
              </td>
            <% }); %>
            </tr>
          </tbody>
      </table>
    </div>

    <button type="submit" class="orb-btn orb-btn-success ml-auto">
      변경
    </button>
  </div>
</form>

<script nonce="<%=nonce%>">
  document.addEventListener('DOMContentLoaded', () => { 
    document.getElementById('formEmployeePermissions').addEventListener('submit', async function(e) {
      e.preventDefault();
  
      const permissions = Array.from(document.querySelectorAll('input[name="permission"]:checked')).map(checkbox => checkbox.value);
  
      const data = { permissions };
  
      try {
        // 권한 부여 API 호출
        const response = await fetchApi(
          '<%=apiRoutes.employees.permissions.method%>',
          '<%=apiRoutes.employees.permissions.url%>'.replace(':employeeId', '<%=data.id%>'), 
          {
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(data)
          }
        );
        
        // 응답 성공
        alertMessage('success', '<%=apiRoutes.employees.permissions.title%>되었습니다.', '<%=apiRoutes.employees.permissions.title%>').then(() => {
          window.location.href = '<%=backendRoutes.employees.detail.url%>'.replace(':employeeId', '<%=data.id%>');
        });
      } catch (err) {
        toastMessage('error', error.message || '서버 오류가 발생했습니다.');
          
      }
    });
  });
</script>