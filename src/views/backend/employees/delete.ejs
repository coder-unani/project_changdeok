<div class="my-2">
  <h1 class="flex items-center gap-1.5 justify-self-start py-2 text-center text-slate-700 transition-all">
    <span class="orb-head"><%=title%></span>
  </h1>
</div>
<div class="bg-default-bg mb-4 space-y-4 rounded-xl p-4 text-sm shadow-[0_2px_30px_rgba(0,0,0,.06)] lg:p-6">
  <div class="flex flex-col items-center justify-center gap-4 py-2">
    <p class="text-center">
      관리자 계정 <span class="font-bold text-red-500"><%=data.email%></span>을(를)<br />
      정말 삭제하시겠습니까?
    </p>
    <div class="flex items-center justify-center gap-4">
      <button id="btn-delete" class="text-common-white rounded-lg bg-red-500 px-4 py-2">삭제</button>
      <button
        id="btn-cancel"
        class="text-common-white rounded-lg bg-gray-500 px-4 py-2"
        onclick="window.history.back()"
      >
        취소
      </button>
    </div>
  </div>
</div>

<script nonce="<%=nonce%>">
  document.addEventListener('DOMContentLoaded', () => {
    const btnDelete = document.getElementById('btn-delete');
    btnDelete.addEventListener('click', async (e) => {
      e.preventDefault();

      try {
        // 직원 삭제 API 호출
        const apiUrl = '<%=apiRoutes.employees.delete.url%>'.replace(':employeeId', '<%=data.id%>');
        const response = await fetch(apiUrl, {
          method: '<%=apiRoutes.employees.delete.method%>',
          headers: {
            'Content-Type': 'application/json',
            Authorization: `Bearer ${getCookie('access_token')}`,
          },
        });

        // 응답 오류
        if (!response.ok) {
          const errorData = await response.json();
          throw new Error(errorData.message || response.statusText);
        }

        // 응답 성공
        alertMessage('success', '<%=apiRoutes.employees.delete.title%> 성공').then(() => {
          window.location.href = '<%=backendRoutes.employees.url%>';
        });
      } catch (err) {
        toastMessage('error', error.message || '서버 오류가 발생했습니다.');
      }
    });

    const btnCancel = document.getElementById('btn-cancel');
    btnCancel.addEventListener('click', async (e) => {
      e.preventDefault();
      window.history.back();
    });
  });
</script>
