<div class="max-w-[1024px] h-full bg-white p-2 lg:p-4 rounded-2xl shadow-md">
  <div class="block mb-4 mx-auto border-b border-slate-300 pb-2 max-w-[360px]">
    <h1 class='flex justify-center items-center gap-1.5 px-4 py-2 text-center text-slate-700 transition-all'>
      <span class="font-bold"><%=title%></span>
    </h1>
  </div>
  <form id="formAdminRegister" class="space-y-4 text-sm">
    <div>
      <label for="email" class="block mb-1 font-medium text-gray-700">이메일</label>
      <input type="email" id="email" name="email" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="이메일" required>
    </div>
    
    <div>
      <label for="name" class="block mb-1 font-medium text-gray-700">이름</label>
      <input type="text" id="name" name="name" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="이름" required>
    </div>
    
    <div>
      <label for="password" class="block mb-1 font-medium text-gray-700">비밀번호</label>
      <input type="password" id="password" name="password" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="비밀번호" required>
      <p class="mt-1 text-sm text-gray-500">비밀번호는 영문, 숫자, 특수문자를 포함하여 8자 이상으로 입력해주세요.</p>
    </div>
    
    <div>
      <label for="passwordConfirm" class="block mb-1 font-medium text-gray-700">비밀번호 확인</label>
      <input type="password" id="passwordConfirm" name="passwordConfirm" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="비밀번호 확인" required>
    </div>
    
    <div>
      <label for="position" class="block mb-1 font-medium text-gray-700">직급</label>
      <input type="text" id="position" name="position" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="직급">
    </div>
    
    <div>
      <label for="description" class="block mb-1 font-medium text-gray-700">설명</label>
      <input type="text" id="description" name="description" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="설명">
    </div>
    
    <div>
      <label for="phone" class="block mb-1 font-medium text-gray-700">전화번호</label>
      <input type="text" id="phone" name="phone" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="전화번호">
    </div>
    
    <div>
      <label for="mobile" class="block mb-1 font-medium text-gray-700">휴대전화</label>
      <input type="text" id="mobile" name="mobile" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="휴대전화">
    </div>
    
    <div>
      <label for="address" class="block mb-1 font-medium text-gray-700">주소</label>
      <input type="text" id="address" name="address" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="주소">
    </div>
    
    <div>
      <label for="hireDate" class="block mb-1 font-medium text-gray-700">입사일</label>
      <input type="date" id="hireDate" name="hireDate" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
    </div>
    
    <div>
      <label for="birthDate" class="block mb-1 font-medium text-gray-700">생년월일</label>
      <input type="date" id="birthDate" name="birthDate" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
    </div>
    
    <div class="text-right">
      <button type="submit" class="orb-btn-primary">
        등록
      </button>
    </div>
  </form>
</div>

<script>
document.getElementById('formAdminRegister').addEventListener('submit', async (e) => {
    e.preventDefault();

    // 폼 데이터 수집
    const formData = new FormData(e.target);

    // 폼 데이터 변환
    const data = {};
    formData.forEach((value, key) => {
        data[key] = value;
    });

    try {
      // 직원 등록 API 호출
      const response = await fetch('<%=apiBackendRoutes.employeesRegist.url%>', {
        method: '<%=apiBackendRoutes.employeesRegist.method%>',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
      });

      // 응답 오류
      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.message || response.statusText);
      }

      // 응답 성공
      alert('<%=apiBackendRoutes.employeesRegist.title%> 성공');
        
    } catch (err) {
      alert(error.message || '서버 오류가 발생했습니다.');
        
    }
});
</script>
