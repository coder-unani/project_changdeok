<div class="hidden space-y-4" id="login-history-container">
  <div class="flex w-full flex-col justify-between lg:flex-row lg:items-center">
    <div class="flex flex-col gap-4 lg:flex-row">
      <div class="flex flex-col gap-2 lg:flex-row">
        <div class="w-[200px]">
          <input type="text" id="login-history-query" class="orb-input" placeholder="검색어를 입력해주세요." />
        </div>
        <div class="flex items-center gap-1">
          <input
            type="date"
            id="login-history-start-date"
            class="orb-input lg:w-[200px]"
            value="<%=new Date(Date.now() + 9 * 60 * 60 * 1000).toISOString().split('T')[0]%>"
          />
          ~
          <input
            type="date"
            id="login-history-end-date"
            class="orb-input lg:w-[200px]"
            value="<%=new Date(Date.now() + 9 * 60 * 60 * 1000).toISOString().split('T')[0]%>"
          />
        </div>
      </div>
    </div>
    <div class="flex justify-end lg:block">
      <button id="btn-login-history-search" class="orb-btn orb-btn-primary">조회</button>
    </div>
  </div>
  <div id="login-history"></div>
</div>

<script nonce="<%=nonce%>">
  document.addEventListener('DOMContentLoaded', () => {
    const loginHistory = document.getElementById('login-history');
    const customGridLang = {
      ...gridLangKoKR,
      noRecordsFound: '관리자 접속 기록이 없습니다.',
    };

    let currentGrid = null;

    const initGrid = () => {
      // 기존 grid 초기화
      currentGrid?.destroy();

      const startDate = document.getElementById('login-history-start-date').value;
      const endDate = document.getElementById('login-history-end-date').value;
      const query = document.getElementById('login-history-query').value;

      const params = new URLSearchParams({
        startDate,
        endDate,
        query,
      });

      // gridjs 인스턴스 생성
      currentGrid = new gridjs.Grid({
        columns: [
          '관리자 번호',
          '아이디',
          '로그인 시간',
          {
            name: '상태',
            formatter: (cell) =>
              gridjs.html(
                cell === 'SUCCESS'
                  ? `<span class="px-2.5 py-1 bg-emerald-100 rounded-full text-sm font-medium text-emerald-500">성공</span>`
                  : `<span class="px-2.5 py-1 bg-amber-100 rounded-full text-sm font-medium text-amber-500">실패</span>`
              ),
          },
          'IP 주소',
          '메세지',
          '오리진',
          '참조',
          '사용자 에이전트',
        ],
        language: customGridLang,
        data: [],
        resizable: true,
        style: {
          table: { 'white-space': 'nowrap' },
        },
        sort: true,
        server: {
          url: `<%=apiRoutes.employees.loginHistory.url%>?${params.toString()}`,
          headers: {
            Authorization: `Bearer ${getCookie('access_token')}`,
          },
          then: (data) => {
            return data.data.map((item) => [
              item.employeeId ? item.employeeId : '-',
              item.employeeEmail,
              item.loginAt,
              item.status,
              item.clientIp,
              item.message,
              item.origin ? item.origin : '-',
              item.referer ? item.referer : '-',
              item.userAgent ? item.userAgent : '-',
            ]);
          },
          total: (data) => data.metadata.total,
        },
        pagination: {
          limit: 20,
          server: {
            url: (prev, page, limit) => {
              return `${prev}&page=${page + 1}&pageSize=${limit}`;
            },
          },
        },
      });

      // gridjs 렌더링
      currentGrid.render(loginHistory);
    };

    document.getElementById('btn-login-history-search').addEventListener('click', () => {
      initGrid();
    });

    initGrid();
  });
</script>
