<div class="my-2">
  <h1 class='flex justify-between items-baseline gap-1.5 py-2 text-center text-slate-700 transition-all'>
    <span class="orb-head"><%=title%></span>
    <p class="text-right orb-label"><span class="pr-0.5 text-red-500">*</span>필수입력사항</p>
  </h1>
</div>

<form id="formUpdatePassword">
  <div class="space-y-4 text-sm text-gray-800 bg-default-bg p-4 mb-4 lg:p-6 rounded-xl shadow-[0_2px_30px_rgba(0,0,0,.06)]">
    <% if (!data.isForceUpdatePassword) { %>
      <div>
        <label for="password" class="block mb-2 orb-label">현재 비밀번호<span class="pl-0.5 text-red-500">*</span></label>
        <input type="password" id="password" name="password" class="orb-input" placeholder="비밀번호를 입력해주세요." required>
      </div>
    <% } %>
    <div>
      <label for="new-password" class="block mb-2 orb-label">새 비밀번호<span class="pl-0.5 text-red-500">*</span></label>
      <input type="password" id="new-password" name="passwordNew" class="orb-input" placeholder="새 비밀번호를 입력해주세요." required>
    </div>
    <div>
      <label for="new-password-confirm" class="block mb-2 orb-label">비밀번호 확인<span class="pl-0.5 text-red-500">*</span></label>
      <input type="password" id="new-password-confirm" name="passwordNewConfirm" class="orb-input" placeholder="새 비밀번호를 한번 더 입력해주세요." required>
      <p class="orb-remark px-2 pt-2">* 비밀번호는 영문, 숫자, 특수문자를 포함하여 8자 이상으로 입력해주세요.</p>
    </div>
  
    <button type="submit" class="orb-btn orb-btn-success ml-auto">변경</button>
  </div>
</form>

<script nonce="<%=nonce%>">
  document.addEventListener('DOMContentLoaded', () => {
    document.getElementById('formUpdatePassword').addEventListener('submit', async (e) => {
      e.preventDefault();

      isLoading(true);
      
      // 폼 데이터 수집
      const formData = new FormData(e.target);

      // 폼 데이터 변환
      const data = {};
      formData.forEach((value, key) => {
          data[key] = value;
      });

      try {
        // 비밀번호 변경 API 호출
        const response = await fetchApi(
          '<%=apiRoutes.employees.updatePassword.method%>',
          '<%=apiRoutes.employees.updatePassword.url%>'.replace(':employeeId', '<%=data.employeeId%>'), 
          {
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(data)
          }
        );
        
        // 응답 성공
        alertMessage(
          'success',
          '<%=apiRoutes.employees.updatePassword.title%>되었습니다.',
          '<%=apiRoutes.employees.updatePassword.title%>'
        ).then(() => {
          window.location.href = '<%=backendRoutes.employees.detail.url%>'.replace(':employeeId', '<%=data.employeeId%>');
        });
      } catch (error) {
        toastMessage('error', error.message || '서버 오류가 발생했습니다.');
      } finally {
        isLoading(false);
      }
    });
  });
</script>