  <div class="block pt-2 mb-2">
    <h1 class='flex justify-self-start items-center gap-1.5 py-2 text-center text-slate-700 transition-all'>
      <span class="font-bold text-xl"><%=title%></span>
    </h1>
  </div>
  <form id="formUpdatePassword" class="space-y-4 text-sm">
    <div class="space-y-4 text-sm bg-white p-2 mb-4 lg:p-4 rounded-xl shadow-[0_2px_30px_rgba(0,0,0,.06)]">
      <% if (!data.isForceUpdatePassword) { %>
        <div>
          <label for="password" class="block mb-1 font-medium text-gray-700">현재 비밀번호</label>
          <input type="password" id="password" name="password" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="비밀번호" required>
        </div>
      <% } %>
      <div>
        <label for="new-password" class="block mb-1 font-medium text-gray-700">신규 비밀번호</label>
        <input type="password" id="new-password" name="passwordNew" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="비밀번호" required>
      </div>
      <div>
        <label for="new-password-confirm" class="block mb-1 font-medium text-gray-700">비밀번호 확인</label>
        <input type="password" id="new-password-confirm" name="passwordNewConfirm" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="비밀번호" required>
      </div>
      <p class="mt-1 text-sm text-gray-500">비밀번호는 영문, 숫자, 특수문자를 포함하여 8자 이상으로 입력해주세요.</p>
    </div>
    <div class="text-right">
      <button type="submit" class="orb-btn-primary">
        수정
      </button>
    </div>
  </form>

<script>
  document.getElementById('formUpdatePassword').addEventListener('submit', async function(event) {
    event.preventDefault();
    
    // 폼 데이터 수집
    const formData = new FormData(this);

    // 폼 데이터 변환
    const data = {};
    formData.forEach((value, key) => {
        data[key] = value;
    });

    try {
      // 비밀번호 변경 API 호출
      const apiUrl = '<%=apiBackendRoutes.employeesUpdatePassword.url%>'.replace(':employeeId', '<%=data.employeeId%>');
      const response = await fetch(apiUrl, {
        method: '<%=apiBackendRoutes.employeesUpdatePassword.method%>',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(data)
      });

      // 응답 오류
      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.message || response.statusText);
      }
      
      // 응답 성공
      alert('<%=apiBackendRoutes.employeesUpdatePassword.title%> 성공');
      window.location.href = '<%=routes.employeesDetail.url%>'.replace(':employeeId', '<%=data.employeeId%>');
        
    } catch (error) {
      alert(error.message || '서버 오류가 발생했습니다.');
        
    }
  });
</script>