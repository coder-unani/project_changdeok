<div class="block pt-2 mb-2">
  <h1 class='flex justify-self-start items-center gap-1.5 py-2 text-center text-slate-700 transition-all'>
    <span class="font-bold text-xl"><%=title%></span>
  </h1>
</div>
<div class="space-y-4 text-sm bg-white p-4 mb-4 lg:p-6 rounded-xl shadow-[0_2px_30px_rgba(0,0,0,.06)]">
  <div class="flex flex-col justify-between items-center">
    <div>
      <p>
        <span class="font-bold">Title:</span> <%=data.title%>
      </p>
    </div>
    <div>
      <p>
        <span class="font-bold">Content:</span> <%=data.content%>
      </p>
    </div>
    <div>
      <p>
        <span class="font-bold">작성자:</span> <%=data.writerId || 'null'%> <%=data.writerName || 'null'%> <%=data.writerId || 'null'%>
      </p>
    </div>
    <div>
      <p>
        <span class="font-bold">조회수:</span> <%=data.viewCount%>
      </p>
    </div>
    <div>
      <p>
        <span class="font-bold">좋아요:</span> <%=data.likeCount%>
      </p>
    </div>
    <div>
      <p>
        <span class="font-bold">댓글수:</span> <%=data.commentCount%>
      </p>
    </div>
    <div>
      <p>
        <span class="font-bold">작성일:</span> <%=data.createdAt%>
      </p>
    </div>
  </div>
</div>

<div class="flex flex-col lg:flex-row flex-wrap items-center justify-between gap-1">
  <div class="flex w-full lg:w-auto">
    <a href="<%=routes.contentUpdate.url.replace(':groupId', metadata.groupId).replace(':contentId', data.id)%>" class="orb-btn-secondary">
      수정하기
    </a>
  </div>
  <div class="flex w-full lg:w-auto">
    <a href="#" id="btn-delete" class="orb-btn-delete">
      삭제하기
    </a>
  </div>
</div>

<script>
document.getElementById('btn-delete').addEventListener('click', async (e) => {
  e.preventDefault();

  if (!confirm('정말 삭제하시겠습니까?')) {
    return;
  }

  try {
    // 컨텐츠 삭제 API 호출
    const apiUrl = '<%=apiBackendRoutes.contentDelete.url%>'.replace(':groupId', '<%=metadata.groupId%>').replace(':contentId', '<%=data.id%>');
    const response = await fetch(apiUrl, {
      method: '<%=apiBackendRoutes.contentDelete.method%>',
      headers: {
        'Content-Type': 'application/json'
      }
    });

    // 응답 오류
    if (!response.ok) {
      const errorData = await response.json();
      throw new Error(errorData.message || response.statusText);
    }

    // 응답 성공
    alert('<%=apiBackendRoutes.contentDelete.title%> 성공');
    window.location.href = "<%=routes.contents.url%>".replace(':groupId', '<%=metadata.groupId%>');

  } catch (error) {
    alert(error.message || '서버 오류가 발생했습니다.');

  }
});
</script>