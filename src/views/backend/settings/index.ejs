<div class="mb-2 block pt-2">
  <h1 class="flex items-center gap-1.5 justify-self-start py-2 text-center text-slate-700 transition-all">
    <span class="text-xl font-bold"><%=title%></span>
  </h1>
</div>

<!-- 시스템 상태 -->
<div class="mb-4 space-y-4 rounded-xl bg-white p-4 text-sm shadow-[0_2px_30px_0_rgba(0,0,0,.06)] lg:space-y-6 lg:p-6">
  <div id="system-status-container">
    <div class="mb-2 flex items-center justify-between">
      <h3 class="text-lg font-semibold">시스템 상태</h3>
      <div class="flex gap-2">
        <button id="refresh-system-status" class="orb-btn-primary">새로고침</button>
        <button id="restart-server" class="orb-btn-delete">재시작</button>
      </div>
    </div>
    <div class="grid grid-cols-2 gap-2 text-sm">
      <div class="flex items-center gap-2">
        <span class="font-medium">프로세스:</span>
        <span id="process-status" class="text-gray-600">-</span>
      </div>
      <div class="flex items-center gap-2">
        <span class="font-medium">CPU:</span>
        <span id="cpu-status" class="text-gray-600">-</span>
      </div>
      <div class="flex items-center gap-2">
        <span class="font-medium">메모리:</span>
        <span id="memory-status" class="text-gray-600">-</span>
      </div>
      <div class="flex items-center gap-2">
        <span class="font-medium">가동시간:</span>
        <span id="uptime" class="text-gray-600">-</span>
      </div>
    </div>
    <p id="system-status-message" class="mt-2 text-sm text-red-500"></p>
  </div>
</div>

<div class="mb-4 space-y-4 rounded-xl bg-white p-4 text-sm shadow-[0_2px_30px_0_rgba(0,0,0,.06)] lg:space-y-6 lg:p-6">
  <ul
    class="flex flex-wrap border-b border-slate-200 text-center text-sm font-medium text-gray-500 dark:border-gray-700 dark:text-gray-400"
  >
    <li class="me-2">
      <button
        class="inline-block cursor-pointer rounded-t-lg px-4 py-3 hover:bg-gray-50 hover:text-gray-600 dark:hover:bg-gray-800 dark:hover:text-gray-300"
        data-tab="site-settings"
      >
        사이트 설정
      </button>
    </li>
    <li class="me-2">
      <button
        class="inline-block cursor-pointer rounded-t-lg px-4 py-3 hover:bg-gray-50 hover:text-gray-600 dark:hover:bg-gray-800 dark:hover:text-gray-300"
        data-tab="company-settings"
      >
        회사 설정
      </button>
    </li>
    <li class="me-2">
      <button
        class="inline-block cursor-pointer rounded-t-lg px-4 py-3 hover:bg-gray-50 hover:text-gray-600 dark:hover:bg-gray-800 dark:hover:text-gray-300"
        data-tab="system-settings"
      >
        시스템 설정
      </button>
    </li>
  </ul>

  <!-- 사이트 설정 -->
  <div id="site-settings-container" class="hidden">
    <form id="site-settings-form" enctype="multipart/form-data">
      <input type="hidden" id="favicon-orig" name="faviconOrig" value="<%=data.favicon%>" />
      <input type="hidden" id="logo-orig" name="logoOrig" value="<%=data.logo%>" />
      <input type="hidden" id="og-image-orig" name="ogImageOrig" value="" />
      <input type="hidden" id="og-tag-json" name="ogTagJson" value="<%=data.ogTagJson%>" />
      <ul class="mb-4 space-y-4">
        <li class="flex">
          <label for="favicon" class="mt-3 w-42 flex-none text-[13px] font-medium text-gray-400">파비콘</label>
          <input type="file" id="favicon" name="favicon" class="hidden" accept="image/x-icon" />
          <div class="flex-1 flex items-center">
            <div
              id="favicon-preview-container"
              class="flex items-center gap-2 h-[36px] rounded-t-xl border-t border-r border-l border-gray-200 pr-[15px] pl-[10px]"
            >
              <!-- 파비콘 미리보기 -->
              <div class="rounded-full h-[16px] w-[16px] bg-gray-100 overflow-hidden">
                <% if (!data.favicon) { %>
                  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512" fill="currentColor" class="h-[16px] w-[16px] text-gray-500">
                    <path d="M57.7 193l9.4 16.4c8.3 14.5 21.9 25.2 38 29.8L163 255.7c17.2 4.9 29 20.6 29 38.5l0 39.9c0 11 6.2 21 16 25.9s16 14.9 16 25.9l0 39c0 15.6 14.9 26.9 29.9 22.6c16.1-4.6 28.6-17.5 32.7-33.8l2.8-11.2c4.2-16.9 15.2-31.4 30.3-40l8.1-4.6c15-8.5 24.2-24.5 24.2-41.7l0-8.3c0-12.7-5.1-24.9-14.1-33.9l-3.9-3.9c-9-9-21.2-14.1-33.9-14.1L257 256c-11.1 0-22.1-2.9-31.8-8.4l-34.5-19.7c-4.3-2.5-7.6-6.5-9.2-11.2c-3.2-9.6 1.1-20 10.2-24.5l5.9-3c6.6-3.3 14.3-3.9 21.3-1.5l23.2 7.7c8.2 2.7 17.2-.4 21.9-7.5c4.7-7 4.2-16.3-1.2-22.8l-13.6-16.3c-10-12-9.9-29.5 .3-41.3l15.7-18.3c8.8-10.3 10.2-25 3.5-36.7l-2.4-4.2c-3.5-.2-6.9-.3-10.4-.3C163.1 48 84.4 108.9 57.7 193zM464 256c0-36.8-9.6-71.4-26.4-101.5L412 164.8c-15.7 6.3-23.8 23.8-18.5 39.8l16.9 50.7c3.5 10.4 12 18.3 22.6 20.9l29.1 7.3c1.2-9 1.8-18.2 1.8-27.5zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256z"/>
                  </svg>
                <% } else { %>
                  <img
                    id="favicon-preview"
                    class="h-full w-full object-cover object-center"
                    src="<%=data.favicon%>"
                    alt="이미지 미리보기"
                    />
                <% } %>
              </div>
              <!-- 사이트명 -->
              <p class="flex-1 text-[13px] min-w-[148px]"><%=data.title%></p>
              <!-- 닫기 아이콘 -->
              <div class="flex-none">
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 384 512" fill="currentColor" class="h-[14px] w-[14px] text-gray-500">
                  <path d="M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z" />
                </svg>
              </div>
            </div>
          </div>
          <button type="button" id="favicon-add" class="orb-btn-common flex flex-none items-center gap-1">
            <span>변경</span>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 448 512"
              fill="currentColor"
              class="h-[13px] w-[13px] text-gray-500"
            >
              <path
                d="M256 80c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 144L48 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l144 0 0 144c0 17.7 14.3 32 32 32s32-14.3 32-32l0-144 144 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-144 0 0-144z"
              />
            </svg>
          </button>
        </li>
        <li class="flex">
          <label for="logo" class="mt-3 w-42 flex-none text-[13px] font-medium text-gray-400">로고</label>
          <input type="file" id="logo" name="logo" class="hidden" accept="image/*" placeholder="로고 주소" />
          <div class="flex-1 flex items-center">
            <div class="relative w-[220px] aspect-3/2">
              <button type="button" id="logo-add-1" class="absolute top-0 left-0 h-full w-full rounded-lg border border-dashed border-gray-200 bg-gray-100 cursor-pointer">
                <span class="absolute inset-0 flex flex-col items-center justify-center">
                  <img class="block w-[50px] opacity-50" src="/images/add-image-512x512.png" alt="이미지 추가" />
                  <p class="mt-1 text-xs text-gray-400">(512x512)</p>
                </span>
              </button>
              <div
                id="logo-preview-container"
                class="<% if (!data.logo) { %>hidden<% } %> relative z-10 h-full w-full overflow-hidden rounded-lg"
              >
                <div class="relative z-10 h-full w-full overflow-hidden rounded-lg border border-gray-200 bg-gray-100">
                  <img
                    id="logo-preview"
                    class="h-full w-full object-contain"
                    src="<%=data.logo%>"
                    alt="이미지 미리보기"
                  />
                </div>
              </div>
            </div>
          </div>
          <div>
            <button type="button" id="logo-add-2" class="orb-btn-common flex flex-none items-center gap-1">
              <span>변경</span>
              <svg
                xmlns="http://www.w3.org/2000/svg"
                viewBox="0 0 448 512"
                fill="currentColor"
                class="h-[13px] w-[13px] text-gray-500"
              >
                <path
                  d="M256 80c0-17.7-14.3-32-32-32s-32 14.3-32 32l0 144L48 224c-17.7 0-32 14.3-32 32s14.3 32 32 32l144 0 0 144c0 17.7 14.3 32 32 32s32-14.3 32-32l0-144 144 0c17.7 0 32-14.3 32-32s-14.3-32-32-32l-144 0 0-144z"
                />
              </svg>
            </button>
          </div>
        </li>
        <li class="flex">
          <label for="title" class="mt-3 w-42 flex-none text-[13px] font-medium text-gray-400">사이트명</label>
          <input
            type="text"
            id="title"
            name="title"
            class="w-full rounded-lg bg-gray-100 px-4 py-3 placeholder:text-sm placeholder:text-gray-400 focus:ring-2 focus:ring-blue-500 focus:outline-none"
            placeholder="사이트명"
            value="<%=data.title%>"
          />
        </li>
        <li class="flex">
          <label for="introduction" class="mt-3 w-42 flex-none text-[13px] font-medium text-gray-400"
            >사이트 소개</label
          >
          <input
            type="text"
            id="introduction"
            name="introduction"
            class="w-full rounded-lg bg-gray-100 px-4 py-3 placeholder:text-sm placeholder:text-gray-400 focus:ring-2 focus:ring-blue-500 focus:outline-none"
            value="<%=data.introduction%>"
            placeholder="사이트 소개"
          />
        </li>
        <li class="flex">
          <label for="description" class="mt-3 w-42 flex-none text-[13px] font-medium text-gray-400">사이트 설명</label>
          <textarea
            id="description"
            name="description"
            class="w-full rounded-lg bg-gray-100 px-4 py-3 placeholder:text-sm placeholder:text-gray-400 focus:ring-2 focus:ring-blue-500 focus:outline-none"
            placeholder="사이트 설명"
          >
<%=data.description%></textarea
          >
        </li>
        <li class="flex">
          <label for="keyword" class="mt-3 w-42 flex-none text-[13px] font-medium text-gray-400">사이트 키워드</label>
          <div class="flex w-full flex-col">
            <input
              id="keyword"
              name="keywords"
              class="w-full rounded-lg bg-gray-100 px-4 py-3 placeholder:text-sm placeholder:text-gray-400 focus:ring-2 focus:ring-blue-500 focus:outline-none"
              value="<%=data.keywords%>"
              placeholder="사이트 키워드"
            />
            <p class="px-3 pt-2 text-[12px] font-medium text-gray-400">
              * 콤마(,)로 구분하여 여러 개의 키워드를 입력할 수 있습니다.
            </p>
          </div>
        </li>
        <li class="flex">
          <label for="og-title" class="mt-3 w-42 flex-none text-[13px] font-medium text-gray-400"
            >오픈그래프 사이트명</label
          >
          <input
            id="og-title"
            class="w-full rounded-lg bg-gray-100 px-4 py-3 placeholder:text-sm placeholder:text-gray-400 focus:ring-2 focus:ring-blue-500 focus:outline-none"
            value=""
            placeholder="오픈그래프 사이트명"
          />
        </li>
        <li class="flex">
          <label for="og-description" class="mt-3 w-42 flex-none text-[13px] font-medium text-gray-400"
            >오픈그래프 설명</label
          >
          <input
            id="og-description"
            class="w-full rounded-lg bg-gray-100 px-4 py-3 placeholder:text-sm placeholder:text-gray-400 focus:ring-2 focus:ring-blue-500 focus:outline-none"
            value=""
            placeholder="오픈그래프 설명"
          />
        </li>
        <li class="flex">
          <label for="og-image" class="mt-3 w-42 flex-none text-[13px] font-medium text-gray-400"
            >오픈그래프 이미지</label
          >
          <input
            type="file"
            id="og-image"
            name="ogImage"
            class="hidden"
            accept="image/*"
            placeholder="오픈그래프 이미지"
          />
          <div class="relative aspect-3/2 w-full lg:w-[250px]">
            <button
              type="button"
              id="og-image-add"
              class="absolute top-0 left-0 h-full w-full cursor-pointer rounded-lg border border-dashed border-gray-200 bg-gray-100"
            >
              <span class="absolute inset-0 flex flex-col items-center justify-center">
                <img class="block w-[50px] opacity-50" src="/images/add-image-512x512.png" alt="이미지 추가" />
                <p class="mt-1 text-xs text-gray-400">(512x512)</p>
              </span>
            </button>
            <div
              id="og-image-preview-container"
              class="<% if (!data.logo) { %>hidden<% } %> relative z-10 h-full w-full overflow-hidden rounded-lg"
            >
              <button
                type="button"
                id="og-image-delete"
                class="absolute top-2 right-2 z-20 h-[24px] w-[24px] cursor-pointer rounded-full bg-white opacity-80"
              >
                <span class="absolute inset-0 flex items-center justify-center">
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 384 512"
                    fill="currentColor"
                    class="h-[16px] w-[16px] text-gray-400"
                  >
                    <path
                      d="M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z"
                    />
                  </svg>
                </span>
              </button>
              <div class="relative z-10 h-full w-full overflow-hidden rounded-lg border border-gray-200 bg-gray-100">
                <img id="og-image-preview" class="h-full w-full object-contain" src="" alt="이미지 미리보기" />
              </div>
            </div>
          </div>
        </li>
        <li class="flex">
          <label for="service-domain" class="mt-3 w-42 flex-none text-[13px] font-medium text-gray-400"
            >서비스 도메인</label
          >
          <input
            type="text"
            id="service-domain"
            name="serviceDomain"
            class="w-full rounded-lg bg-gray-100 px-4 py-3 placeholder:text-sm placeholder:text-gray-400 focus:ring-2 focus:ring-blue-500 focus:outline-none"
            value="<%=data.serviceDomain%>"
            placeholder="서비스 도메인"
          />
        </li>
        <li class="flex">
          <label for="service-port" class="mt-3 w-42 flex-none text-[13px] font-medium text-gray-400"
            >서비스 포트</label
          >
          <input
            type="text"
            id="service-port"
            name="servicePort"
            class="w-full rounded-lg bg-gray-100 px-4 py-3 placeholder:text-sm placeholder:text-gray-400 focus:ring-2 focus:ring-blue-500 focus:outline-none"
            value="<%=data.servicePort%>"
            placeholder="서비스 포트"
            readonly
          />
        </li>
      </ul>
      <div class="flex justify-end">
        <button type="submit" class="orb-btn-primary">저장</button>
      </div>
    </form>
  </div>
  <!-- 회사 설정 -->
  <div id="company-settings-container" class="hidden">
    <form id="company-settings-form">
      <input type="hidden" id="company-json" name="companyJson" value="<%=data.companyJson%>" />
      <ul>
        <li>
          <label for="company-name">회사명</label>
          <input type="text" id="company-name" placeholder="회사명" />
        </li>
        <li>
          <label for="company-ceo">대표자</label>
          <input type="text" id="company-ceo" placeholder="대표자" />
        </li>
        <li>
          <label for="company-fax">사업자 번호</label>
          <input type="text" id="company-business-number" placeholder="사업자 번호" />
        </li>
        <li>
          <label for="company-phone">대표번호</label>
          <input type="text" id="company-tel" placeholder="대표번호" />
        </li>
        <li>
          <label for="company-fax">팩스</label>
          <input type="text" id="company-fax" placeholder="팩스" />
        </li>
        <li>
          <label for="company-address">주소</label>
          <input type="text" id="company-address" placeholder="주소" />
        </li>
        <li>
          <label for="company-zip-code">우편번호</label>
          <input type="text" id="company-zip-code" placeholder="우편번호" />
        </li>
        <li>
          <label for="company-email">이메일</label>
          <input type="text" id="company-email" placeholder="이메일" />
        </li>
        <li>
          <label for="company-latitude">위도</label>
          <input type="text" id="company-latitude" placeholder="위도" />
        </li>
        <li>
          <label for="company-longitude">경도</label>
          <input type="text" id="company-longitude" placeholder="경도" />
        </li>
        <li>
          <label for="company-lunchtime-start">점심시간</label>
          <input type="text" id="company-lunchtime-start" placeholder="점심시간" /> ~
          <input type="text" id="company-lunchtime-end" placeholder="점심시간" />
        </li>
      </ul>
      <div class="flex justify-end">
        <button type="submit">저장</button>
      </div>
    </form>
  </div>
  <!-- 시스템 설정 -->
  <div id="system-settings-container" class="hidden">
    <form id="system-settings-form">
      <input type="hidden" id="enabled-tags-json" name="enabledTagsJson" value="<%=data.enabledTagsJson%>" />
      <input type="hidden" id="enabled-cors-json" name="enabledCorsJson" value="<%=data.enabledCorsJson%>" />
      <ul>
        <li>
          <label for="max-upload-size">파일 최대 업로드 사이즈</label>
          <input
            type="text"
            id="max-upload-size"
            name="maxUploadSize"
            value="<%=data.maxUploadSize%>"
            placeholder="파일 최대 업로드 사이즈"
          />
        </li>
        <li>
          <label for="jwt-expire-second">관리자 로그인 유지 시간</label>
          <input
            type="text"
            id="jwt-expire-second"
            name="jwtExpireSecond"
            value="<%=data.jwtExpireSecond%>"
            placeholder="시간"
          />
        </li>
        <li>
          <label for="express-domain">시스템 도메인</label>
          <input
            type="text"
            id="express-domain"
            name="expressDomain"
            value="<%=data.expressDomain%>"
            placeholder="시스템 도메인"
          />
        </li>
        <li>
          <label for="express-port">시스템 포트</label>
          <input
            type="text"
            id="express-port"
            name="expressPort"
            value="<%=data.expressPort%>"
            placeholder="시스템 포트"
          />
        </li>
        <li>
          <label for="enabled-tags-json">시스템 허용 태그</label>
          <textarea id="enabled-tags" placeholder="시스템 허용 태그"> </textarea>
        </li>
        <li>
          <label for="enabled-cors-json">시스템 허용 CORS</label>
          <textarea id="enabled-cors" placeholder="시스템 허용 CORS"> </textarea>
        </li>
      </ul>
      <div class="flex justify-end">
        <button type="submit">저장</button>
      </div>
    </form>
  </div>
</div>

<script nonce="<%=nonce%>">
  document.addEventListener('DOMContentLoaded', () => {
    const siteSettingsContainer = document.getElementById('site-settings-container');
    const companySettingsContainer = document.getElementById('company-settings-container');
    const systemSettingsContainer = document.getElementById('system-settings-container');

    let currentTab = null;

    const switchTab = (activeTab) => {
      // 모든 탭 버튼에서 active 클래스 제거
      document.querySelectorAll('[data-tab]').forEach((button) => {
        button.classList.remove('active', 'bg-blue-50', 'text-blue-500');
        button.classList.add(
          'hover:bg-gray-50',
          'hover:text-gray-600',
          'dark:hover:bg-gray-800',
          'dark:hover:text-gray-300'
        );
      });

      // 클릭된 탭 버튼에 active 클래스 추가
      const activeButton = document.querySelector(`[data-tab="${activeTab}"]`);
      if (activeButton) {
        activeButton.classList.remove(
          'hover:bg-gray-50',
          'hover:text-gray-600',
          'dark:hover:bg-gray-800',
          'dark:hover:text-gray-300'
        );
        activeButton.classList.add('active', 'bg-blue-50', 'text-blue-500');
      }

      if (activeTab === 'site-settings') {
        siteSettingsContainer.classList.remove('hidden');
        companySettingsContainer.classList.add('hidden');
        systemSettingsContainer.classList.add('hidden');
      } else if (activeTab === 'company-settings') {
        siteSettingsContainer.classList.add('hidden');
        companySettingsContainer.classList.remove('hidden');
        systemSettingsContainer.classList.add('hidden');
      } else if (activeTab === 'system-settings') {
        siteSettingsContainer.classList.add('hidden');
        companySettingsContainer.classList.add('hidden');
        systemSettingsContainer.classList.remove('hidden');
      }

      currentTab = activeTab;
    };

    const getSystemStatus = async () => {
      try {
        const response = await fetch('<%=apiRoutes.systems.status.url%>', {
          method: '<%=apiRoutes.systems.status.method%>',
        });

        if (!response.ok) {
          throw new Error('시스템 상태 확인 중 오류가 발생했습니다.');
        }

        const data = await response.json();

        const processInfo = data.data.processInfo;
        const memoryInfo = data.data.memoryInfo;
        const cpuInfo = data.data.cpuInfo;
        const uptime = data.data.uptime;

        const processStatus = processInfo.isRunning ? `실행 중 (PID: ${processInfo.pid})` : '중지됨';
        const memoryStatus = `${memoryInfo.free} / ${memoryInfo.total}`;
        const cpuStatus = `${cpuInfo.used} / ${cpuInfo.idle}`;

        document.getElementById('process-status').textContent = processStatus;
        document.getElementById('memory-status').textContent = memoryStatus;
        document.getElementById('cpu-status').textContent = cpuStatus;
        document.getElementById('uptime').textContent = uptime;
        document.getElementById('system-status-message').textContent = '';

        return true;
      } catch (error) {
        document.getElementById('process-status').textContent = '확인 불가';
        document.getElementById('memory-status').textContent = '확인 불가';
        document.getElementById('cpu-status').textContent = '확인 불가';
        document.getElementById('uptime').textContent = '확인 불가';
        document.getElementById('system-status-message').textContent = '시스템 상태를 불러오는 중 오류가 발생했습니다.';

        return false;
      }
    };

    const restartServer = async () => {
      if (!confirm('서버를 재시작하시겠습니까?')) {
        return;
      }

      try {
        const response = await fetch('<%=apiRoutes.systems.restart.url%>', {
          method: '<%=apiRoutes.systems.restart.method%>',
        });

        if (!response.ok) {
          throw new Error('서버 재시작 중 오류가 발생했습니다.');
        }

        setTimeout(() => {
          const result = getSystemStatus();
          if (result) {
            alert('서버가 재시작되었습니다.');
          } else {
            alert('서버 재시작 중 오류가 발생했습니다.');
          }
        }, 2000);
      } catch (error) {
        alert(error.message || '서버 재시작 중 오류가 발생했습니다.');
      }
    };

    const init = async () => {
      try {
        const ogTagJson = document.getElementById('og-tag-json').value;
        const ogTag = JSON.parse(ogTagJson);

        document.getElementById('og-title').value = ogTag['og:title'] ? ogTag['og:title'] : '';
        document.getElementById('og-description').value = ogTag['og:description'] ? ogTag['og:description'] : '';
        document.getElementById('og-image-preview').src = ogTag['og:image'] ? ogTag['og:image'] : '';
        document.getElementById('og-image-orig').value = ogTag['og:image'] ? ogTag['og:image'] : '';
        if (ogTag['og:image']) {
          document.getElementById('og-image-preview-container').classList.remove('hidden');
        }
      } catch (error) {
        console.error(error);
      }

      try {
        const companyJson = document.getElementById('company-json').value;
        const company = JSON.parse(companyJson);

        document.getElementById('company-name').value = company.name ? company.name : '';
        document.getElementById('company-ceo').value = company.ceo ? company.ceo : '';
        document.getElementById('company-business-number').value = company.businessNumber ? company.businessNumber : '';
        document.getElementById('company-tel').value = company.tel ? company.tel : '';
        document.getElementById('company-fax').value = company.fax ? company.fax : '';
        document.getElementById('company-address').value = company.address ? company.address : '';
        document.getElementById('company-zip-code').value = company.zipCode ? company.zipCode : '';
        document.getElementById('company-email').value = company.email ? company.email : '';
        document.getElementById('company-latitude').value = company.latitude ? company.latitude : '';
        document.getElementById('company-longitude').value = company.longitude ? company.longitude : '';
        document.getElementById('company-lunchtime-start').value = company.lunchtimeStart ? company.lunchtimeStart : '';
        document.getElementById('company-lunchtime-end').value = company.lunchtimeEnd ? company.lunchtimeEnd : '';
      } catch (error) {
        console.error(error);
      }

      try {
        const enabledTagsJson = document.getElementById('enabled-tags-json').value;
        const enabledCorsJson = document.getElementById('enabled-cors-json').value;

        // Convert JSON array to comma-separated string
        const enabledTagsArray = JSON.parse(enabledTagsJson || '[]');
        const enabledCorsArray = JSON.parse(enabledCorsJson || '[]');

        document.getElementById('enabled-tags').value = enabledTagsArray.join(',');
        document.getElementById('enabled-cors').value = enabledCorsArray.join(',');
      } catch (error) {
        console.error(error);
      }

      switchTab('site-settings');

      await getSystemStatus();
    };

    init();

    // 탭 버튼에 이벤트 리스너 추가
    document.querySelectorAll('[data-tab]').forEach((button) => {
      button.addEventListener('click', () => {
        const tabName = button.getAttribute('data-tab');
        switchTab(tabName);
      });
    });

    // 파비콘 등록
    document.getElementById('favicon-add').addEventListener('click', (e) => {
      e.preventDefault();
      document.getElementById('favicon').click();
    });

    // 파비콘 미리보기
    document.getElementById('favicon').addEventListener('change', (e) => {
      const file = e.target.files[0];
      const reader = new FileReader();
      reader.onload = (e) => {
        document.getElementById('favicon-preview').src = e.target.result;
      };
      reader.readAsDataURL(file);
    });

    // 로고 등록
    document.querySelectorAll('[id^="logo-add"]').forEach(button => {
      button.addEventListener('click', (e) => {
        e.preventDefault();
        document.getElementById('logo').click();
      });
    });

    // 로고 미리보기
    document.getElementById('logo').addEventListener('change', (e) => {
      const file = e.target.files[0];
      const reader = new FileReader();
      reader.onload = (e) => {
        document.getElementById('logo-preview').src = e.target.result;
        document.getElementById('logo-preview-container').classList.remove('hidden');
      };
      reader.readAsDataURL(file);
    });

    // Open Graph 이미지 등록
    document.getElementById('og-image-add').addEventListener('click', (e) => {
      e.preventDefault();
      document.getElementById('og-image').click();
    });

    // Open Graph 이미지 미리보기
    document.getElementById('og-image').addEventListener('change', (e) => {
      const file = e.target.files[0];
      const reader = new FileReader();
      reader.onload = (e) => {
        document.getElementById('og-image-preview').src = e.target.result;
        document.getElementById('og-image-preview-container').classList.remove('hidden');
      };
      reader.readAsDataURL(file);
    });

    // Open Graph 이미지 삭제
    document.getElementById('og-image-delete').addEventListener('click', (e) => {
      document.getElementById('og-image').value = '';
      document.getElementById('og-image-orig').value = '';
      document.getElementById('og-image-preview').src = '';
      document.getElementById('og-image-preview-container').classList.add('hidden');
    });

    // 사이트 설정 저장
    document.getElementById('site-settings-form').addEventListener('submit', async (e) => {
      e.preventDefault();

      try {
        const ogTitle = document.getElementById('og-title').value;
        const ogDescription = document.getElementById('og-description').value;
        const ogTag = {
          'og:title': ogTitle,
          'og:description': ogDescription,
          'og:image': '',
        };

        document.getElementById('og-tag-json').value = JSON.stringify(ogTag);

        const formData = new FormData(e.target);

        const response = await fetch('<%=apiRoutes.settings.updateSite.url%>', {
          method: '<%=apiRoutes.settings.updateSite.method%>',
          body: formData,
        });

        if (!response.ok) {
          throw new Error('설정 저장 중 오류가 발생했습니다.');
        }

        alert('사이트 설정이 저장되었습니다.');
        window.location.reload();
      } catch (error) {
        alert(error.message || '설정 저장 중 오류가 발생했습니다.');
      }
    });

    // 회사 설정 저장
    document.getElementById('company-settings-form').addEventListener('submit', async (e) => {
      e.preventDefault();
      try {
        const companyName = document.getElementById('company-name').value;
        const ceo = document.getElementById('company-ceo').value;
        const businessNumber = document.getElementById('company-business-number').value;
        const tel = document.getElementById('company-tel').value;
        const fax = document.getElementById('company-fax').value;
        const address = document.getElementById('company-address').value;
        const zipCode = document.getElementById('company-zip-code').value;
        const email = document.getElementById('company-email').value;
        const latitude = document.getElementById('company-latitude').value;
        const longitude = document.getElementById('company-longitude').value;
        const lunchtimeStart = document.getElementById('company-lunchtime-start').value;
        const lunchtimeEnd = document.getElementById('company-lunchtime-end').value;

        const company = {
          name: companyName,
          ceo: ceo,
          businessNumber: businessNumber,
          tel: tel,
          fax: fax,
          address: address,
          zipCode: zipCode,
          email: email,
          latitude: latitude,
          longitude: longitude,
          lunchtimeStart: lunchtimeStart,
          lunchtimeEnd: lunchtimeEnd,
        };

        const response = await fetch('<%=apiRoutes.settings.updateCompany.url%>', {
          method: '<%=apiRoutes.settings.updateCompany.method%>',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            companyJson: JSON.stringify(company),
          }),
        });

        if (!response.ok) {
          throw new Error('설정 저장 중 오류가 발생했습니다.');
        }

        alert('회사 설정이 저장되었습니다.');
        // window.location.reload();
      } catch (error) {
        alert(error.message || '설정 저장 중 오류가 발생했습니다.');
      }
    });

    // 시스템 설정 저장
    document.getElementById('system-settings-form').addEventListener('submit', async (e) => {
      e.preventDefault();

      try {
        const enabledTags = document.getElementById('enabled-tags').value;
        const enabledCors = document.getElementById('enabled-cors').value;

        // Transform enabledTags into array format
        const enabledTagsArray = enabledTags
          .split(',')
          .map((tag) => tag.trim())
          .filter((tag) => tag.length > 0);

        const enabledCorsArray = enabledCors
          .split(',')
          .map((tag) => tag.trim())
          .filter((tag) => tag.length > 0);

        // Create request data object
        const requestData = {
          maxUploadSize: document.getElementById('max-upload-size').value,
          jwtExpireSecond: document.getElementById('jwt-expire-second').value,
          expressDomain: document.getElementById('express-domain').value,
          expressPort: document.getElementById('express-port').value,
          enabledTagsJson: JSON.stringify(enabledTagsArray),
          enabledCorsJson: JSON.stringify(enabledCorsArray),
        };

        console.log('Sending data:', requestData);

        const response = await fetch('<%=apiRoutes.settings.updateSystem.url%>', {
          method: '<%=apiRoutes.settings.updateSystem.method%>',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(requestData),
        });

        if (!response.ok) {
          throw new Error('설정 저장 중 오류가 발생했습니다.');
        }

        alert('시스템 설정이 저장되었습니다.');
        // window.location.reload();
      } catch (error) {
        alert(error.message || '설정 저장 중 오류가 발생했습니다.');
      }
    });

    // 새로고침 버튼 이벤트 리스너 추가
    document.getElementById('refresh-system-status').addEventListener('click', getSystemStatus);

    // 재시작 버튼 이벤트 리스너 추가
    document.getElementById('restart-server').addEventListener('click', restartServer);
  });
</script>
