<div class="block pt-2">
  <h1 class='flex justify-start items-center gap-1.5 py-2 text-center text-slate-700 transition-all'>
    <span class="font-bold text-xl"><%=title%></span>
  </h1>
</div>

<form id="formBannerWrite" enctype="multipart/form-data">
  <!-- 이미지 형식만 가능한 input file -->
  <input type="file" id="image" name="image" class="hidden" accept="image/*">
  <div class="space-y-4 text-sm bg-white p-2 mb-4 lg:p-4 rounded-xl shadow-[0_2px_30px_rgba(0,0,0,.06)]">
    <div>
      <label for="image" class="block mb-1 font-medium text-gray-700">이미지</label>
      <img id="imagePreview" class="w-[200px] h-[200px] object-cover rounded-md cursor-pointer" src="/images/no-image-200x200.jpg" alt="이미지">
    </div>

    <div>
      <label for="title" class="block mb-1 font-medium text-gray-700">제목</label>
      <input type="text" id="title" name="title" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="제목" required>
    </div>
    
    <div>
      <label for="name" class="block mb-1 font-medium text-gray-700">설명</label>
      <input type="text" id="name" name="name" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="설명">
    </div>

    <div>
      <label for="name" class="block mb-1 font-medium text-gray-700">링크 타입</label>
      <select id="linkType" name="linkType" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
        <option value="1">내부 링크</option>
        <option value="2">외부 링크</option>
      </select>
      <label for="link" class="block mb-1 font-medium text-gray-700">링크</label>
      <input type="text" id="link" name="link" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="링크">
    </div>

    <div>
      <label for="isPublished" class="block mb-1 font-medium text-gray-700">발행 여부</label>
      <select id="isPublished" name="isPublished" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
        <option value="1">발행</option>
        <option value="0">미발행</option>
      </select>
    </div>

    <div>
      <label for="publishedAt" class="block mb-1 font-medium text-gray-700">발행 일시</label>
      <input type="datetime-local" id="publishedAt" name="publishedAt" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
    </div>

    <div>
      <label for="unpublishedAt" class="block mb-1 font-medium text-gray-700">발행 마감 일시</label>
      <input type="datetime-local" id="unpublishedAt" name="unpublishedAt" class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
    </div>
  </div>
      
  <div class="text-right">
    <button type="submit" class="orb-btn-primary">
      등록
    </button>
  </div>
</form>

<script>
  // 배너 이미지 등록
  document.getElementById('imagePreview').addEventListener('click', (e) => {
    document.getElementById('image').click();
  });

  // 이미지 미리보기
  document.getElementById('image').addEventListener('change', (e) => {
    const file = e.target.files[0];
    const reader = new FileReader();
    reader.onload = (e) => {
      document.getElementById('imagePreview').src = e.target.result;
    };
    reader.readAsDataURL(file);
  });

  // 
  document.getElementById('formBannerWrite').addEventListener('submit', async (e) => {
    e.preventDefault();

    alert('등록');
    try {
      // 폼 데이터 수집
      const formData = new FormData(e.target);

      // 배너 등록 API 호출
      const apiUrl = '<%=apiBackendRoutes.bannersWrite.url%>';
      const response = await fetch(apiUrl, {
        method: '<%=apiBackendRoutes.bannersWrite.method%>',
        headers: { },
        body: formData
      });

      // 응답 오류
      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.message || response.statusText);
      }

      // 응답 성공
      alert('<%=apiBackendRoutes.bannersWrite.title%> 성공');

    } catch (error) {
      alert(error.message || '서버 오류가 발생했습니다.');
    }
  });
</script>